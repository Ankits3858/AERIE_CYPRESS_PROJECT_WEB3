{
  "version": 3,
  "sources": ["../src/commands.ts", "../src/utils/get-page-source.ts", "../src/utils/merge-options.ts", "../src/get-arg.ts", "../src/filter/filter.ts", "../src/tasks/htmlvalidate.ts", "../src/tasks/format.ts", "../src/tasks/global-options.ts"],
  "sourcesContent": ["/// <reference types=\"cypress\" />\n\nimport type { ConfigData, Message, Report } from \"html-validate\";\nimport type { ElementMessage } from \"./types\";\nimport type { CypressHtmlValidateOptions } from \"./options\";\nimport { getPageSource, mergeOptions } from \"./utils\";\nimport { getArg } from \"./get-arg\";\nimport { Filter } from \"./filter\";\nimport { taskFormat, taskGlobalOptions, taskHtmlvalidate } from \"./tasks\";\n\ndeclare global {\n\t/* eslint-disable-next-line @typescript-eslint/no-namespace -- module augmentation */\n\texport namespace Cypress {\n\t\tinterface Chainable {\n\t\t\thtmlvalidate(\n\t\t\t\tlocalConfig?: ConfigData,\n\t\t\t\tlocalOption?: Partial<CypressHtmlValidateOptions>\n\t\t\t): void;\n\t\t\thtmlvalidate(localOption: Partial<CypressHtmlValidateOptions>): void;\n\t\t}\n\t}\n}\n\nfunction logError(error: Message, $el?: JQuery): void {\n\tCypress.log({\n\t\t$el,\n\t\tname: error.ruleId,\n\t\tconsoleProps: () => error,\n\t\tmessage: [error.message],\n\t});\n}\n\nfunction findElements(messages: Message[], document: Document): ElementMessage[] {\n\treturn messages.map((message) => {\n\t\treturn {\n\t\t\t...message,\n\t\t\telement: message.selector ? document.querySelector(message.selector) : null,\n\t\t};\n\t});\n}\n\nfunction filterMessages(\n\tmessages: ElementMessage[],\n\tdocument: Document,\n\toptions: CypressHtmlValidateOptions\n): ElementMessage[] {\n\tconst filter = new Filter(document, options);\n\treturn messages.filter((message) => !message.element || filter.match(message.element));\n}\n\nfunction omitElement(message: ElementMessage): Message {\n\tconst { element, ...rest } = message;\n\treturn rest;\n}\n\nfunction isConfigData(src?: ConfigData | Partial<CypressHtmlValidateOptions>): src is ConfigData {\n\tif (!src) {\n\t\treturn false;\n\t}\n\treturn (\n\t\t\"root\" in src ||\n\t\t\"extends\" in src ||\n\t\t\"elements\" in src ||\n\t\t\"plugins\" in src ||\n\t\t\"transform\" in src ||\n\t\t\"rules\" in src\n\t);\n}\n\nfunction isOptions(\n\tsrc?: ConfigData | Partial<CypressHtmlValidateOptions>\n): src is Partial<CypressHtmlValidateOptions> {\n\tif (!src) {\n\t\treturn false;\n\t}\n\treturn \"exclude\" in src || \"include\" in src || \"formatter\" in src;\n}\n\nfunction isJqueryWithSelector(subject: unknown): subject is Cypress.JQueryWithSelector {\n\treturn Boolean(subject && (subject as { selector?: string }).selector);\n}\n\n/**\n * Run html-validate.\n */\nfunction run(markup: string, config?: ConfigData): Cypress.Chainable<Report> {\n\treturn taskHtmlvalidate(markup, config);\n}\n\nfunction getResults(\n\tdocument: Document,\n\tconfig: ConfigData,\n\toptions: CypressHtmlValidateOptions\n): Cypress.Chainable<[messages: number, filtered: number]> {\n\tconst source = getPageSource(document);\n\treturn run(source, config).then((report: Report) => {\n\t\tif (report.valid) {\n\t\t\treturn cy.wrap([0, 0], { log: false });\n\t\t} else {\n\t\t\tconst messages = findElements(report.results[0].messages, document);\n\t\t\tconst filtered = filterMessages(messages, document, options);\n\t\t\tcy.wrap(filtered, { log: false }).each((error: ElementMessage) => {\n\t\t\t\tconst $el = error.element ? Cypress.$(error.element) : undefined;\n\t\t\t\tlogError(error, $el);\n\t\t\t});\n\n\t\t\t/* log violations to nodejs process */\n\t\t\tif (filtered.length > 0) {\n\t\t\t\t/* some properties in `HTMLElement` might not serialize\n\t\t\t\t * properly so they are omitted from the messages before\n\t\t\t\t * passing it to the nodejs process */\n\t\t\t\tconst stripped = filtered.map(omitElement);\n\t\t\t\ttaskFormat(stripped);\n\t\t\t}\n\n\t\t\treturn cy.wrap([messages.length, filtered.length], {\n\t\t\t\tlog: false,\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction validateResult([messages, filtered]: [messages: number, filtered: number]): void {\n\tconst s = filtered !== 1 ? \"s\" : \"\";\n\tconst excluded = messages - filtered;\n\tassert.equal(filtered, 0, `${filtered} error${s}, ${excluded} excluded`);\n}\n\nfunction htmlvalidate(\n\tsubject: unknown,\n\tlocalConfig?: ConfigData,\n\tlocalOption?: Partial<CypressHtmlValidateOptions>\n): void;\nfunction htmlvalidate(subject: unknown, localOption: Partial<CypressHtmlValidateOptions>): void;\nfunction htmlvalidate(\n\tsubject: unknown,\n\targ1?: Partial<CypressHtmlValidateOptions> | ConfigData,\n\targ2?: Partial<CypressHtmlValidateOptions>\n): void {\n\tconst localConfig = getArg(isConfigData, arg1) ?? {};\n\tconst localOptions = getArg(isOptions, arg2, arg1) ?? {};\n\n\tCypress.log({\n\t\tname: \"html-validate\",\n\t\tmessage: [\"Validating document\"],\n\t});\n\n\tcy.document({ log: false }).then((document) => {\n\t\ttaskGlobalOptions()\n\t\t\t.then((globalOptions) => {\n\t\t\t\t/* if a subject is passed first make sure the subject is not filtered by\n\t\t\t\t * the global configuration */\n\t\t\t\tif (isJqueryWithSelector(subject)) {\n\t\t\t\t\tconst globalFilter = new Filter(document, globalOptions);\n\t\t\t\t\tconst hidden = Array.from(subject).filter((it) => !globalFilter.match(it));\n\t\t\t\t\tif (hidden.length > 0) {\n\t\t\t\t\t\tassert.fail(`Selected element is being excluded by global configuration`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst mergedOptions = mergeOptions({\n\t\t\t\t\tglobal: globalOptions,\n\t\t\t\t\tlocal: localOptions,\n\t\t\t\t\tsubject: isJqueryWithSelector(subject) ? subject.selector : undefined,\n\t\t\t\t});\n\n\t\t\t\tCypress.log({\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tmessage: [mergedOptions.include, mergedOptions.exclude],\n\t\t\t\t});\n\n\t\t\t\treturn getResults(document, localConfig, mergedOptions);\n\t\t\t})\n\t\t\t.then((results) => {\n\t\t\t\tvalidateResult(results);\n\t\t\t});\n\t});\n}\n\nCypress.Commands.add<\"htmlvalidate\", \"optional\">(\n\t\"htmlvalidate\",\n\t{\n\t\tprevSubject: \"optional\",\n\t},\n\thtmlvalidate\n);\n", "export function getPageSource(document: Document): string {\n\tconst matchCypress = new RegExp(\n\t\t\"(\\\\s*)<script type=[\\\"']text/javascript[\\\"']>.*?window.Cypress\\\\s*=\\\\s*parent.Cypress.*?</script>\"\n\t);\n\tconst root = document.documentElement;\n\treturn root.outerHTML.replace(matchCypress, (match: string, indent: string) => {\n\t\t/* force disable rules for the cypress injected script tag */\n\t\treturn [\n\t\t\t`${indent}<!-- [html-validate-disable-next no-unused-disable, require-sri, script-type] -->`,\n\t\t\tmatch,\n\t\t].join(\"\");\n\t});\n}\n", "import { type CypressHtmlValidateOptions } from \"../options\";\n\nexport interface MergeSources {\n\tglobal: CypressHtmlValidateOptions;\n\tlocal: Partial<CypressHtmlValidateOptions>;\n\tsubject: string | null | undefined;\n}\n\nexport function joinSelector(a: string, b: string): string {\n\treturn [a, b].join(\" \");\n}\n\nexport function mergeOptions({\n\tglobal,\n\tlocal = {},\n\tsubject,\n}: MergeSources): CypressHtmlValidateOptions {\n\tif (subject) {\n\t\tconst merged = {\n\t\t\t...global,\n\t\t\t...{\n\t\t\t\tinclude: [subject],\n\t\t\t},\n\t\t};\n\t\tif (local.include) {\n\t\t\tmerged.include = local.include.map((it) => joinSelector(subject, it));\n\t\t}\n\t\tif (local.exclude) {\n\t\t\tmerged.exclude = local.exclude.map((it) => joinSelector(subject, it));\n\t\t}\n\t\treturn merged;\n\t} else {\n\t\treturn {\n\t\t\t...global,\n\t\t\t...local,\n\t\t};\n\t}\n}\n", "/**\n * Returns the first parameters that matches predicate or `undefined` if no\n * match is found.\n */\nexport function getArg<S, T extends S>(is: (val: S) => val is T, ...args: S[]): T | undefined {\n\treturn args.find<T>((it): it is T => is(it));\n}\n", "export interface FilterOptions {\n\tinclude: string[];\n\texclude: string[];\n}\n\nfunction findElements(document: Document, selectors: string[]): Element[][] {\n\treturn selectors.map((selector) => {\n\t\treturn Array.from(document.querySelectorAll(selector));\n\t});\n}\n\nfunction matchSelectors(element: Element, selector: Element[][]): boolean {\n\treturn selector.some((elements) => {\n\t\treturn elements.some((inner) => inner.contains(element));\n\t});\n}\n\n/**\n * Element filtering.\n *\n * Takes a list of selectors to include/exclude and matches element against\n * these lists.\n *\n * @internal\n */\nexport class Filter {\n\tprivate include: Element[][];\n\tprivate exclude: Element[][];\n\tprivate matchInclude: boolean;\n\tprivate matchExclude: boolean;\n\n\tpublic constructor(document: Document, { include, exclude }: FilterOptions) {\n\t\tthis.include = findElements(document, include);\n\t\tthis.exclude = findElements(document, exclude);\n\t\tthis.matchInclude = include.length > 0;\n\t\tthis.matchExclude = exclude.length > 0;\n\t}\n\n\t/**\n\t * Match element against filter.\n\t *\n\t * Returns `false` if the element matches:\n\t *\n\t *   - none of include selectors\n\t *   - one or more of exclude selectors\n\t *\n\t * Empty lists are not considered (in particular, if `include` is empty it is\n\t * the same as a selector to match the entire document).\n\t */\n\tpublic match(element: Element): boolean {\n\t\tconst { exclude, include } = this;\n\t\tif (this.matchExclude && matchSelectors(element, exclude)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.matchInclude) {\n\t\t\treturn matchSelectors(element, include);\n\t\t}\n\t\treturn true;\n\t}\n}\n", "import { type ConfigData, type Report } from \"html-validate\";\nimport { type HtmlValidateTaskOptions } from \"../task-options\";\n\n/**\n * Run html-validate.\n */\nexport function taskHtmlvalidate(markup: string, config?: ConfigData): Cypress.Chainable<Report> {\n\tconst options: HtmlValidateTaskOptions = {\n\t\tmarkup,\n\t\tconfig,\n\t};\n\treturn cy.task<Report>(\"htmlvalidate\", options, { log: false });\n}\n", "import { type Message } from \"html-validate\";\n\n/**\n * Format and output messages, e.g. on NodeJS terminal.\n */\nexport function taskFormat(messages: Message[]): Cypress.Chainable<null> {\n\treturn cy.task<null>(\"htmlvalidate:format\", messages, { log: false });\n}\n", "import { type CypressHtmlValidateOptions } from \"../options\";\n\n/**\n * Get global options.\n */\nexport function taskGlobalOptions(): Cypress.Chainable<CypressHtmlValidateOptions> {\n\treturn cy.task<CypressHtmlValidateOptions>(\"htmlvalidate:options\", null, { log: false });\n}\n"],
  "mappings": "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",
  "names": ["findElements"]
}
